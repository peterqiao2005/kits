- name: Pre-flight checks
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Gather Wireguard IPs
      set_fact:
        wireguard_ips: "{{ wireguard_ips | default([]) + [hostvars[item].wireguard_ip] }}"
      loop: "{{ groups['all'] }}"
      when: hostvars[item].wireguard_ip is defined

    - name: Check if there are duplicates in IP list
      set_fact:
        wireguard_ip_duplicates: "{{ wireguard_ips | unique | length != wireguard_ips | length }}"

    - name: Fail if there are duplicates
      fail:
        msg: "Duplicate Wireguard IP address found"
      when: wireguard_ip_duplicates

- name: Connect all nodes via wireguard
  hosts: all
  become: true
  tasks:
    - name: Get primary node wireguard IP
      ansible.builtin.set_fact:
        primary_wg_ip: "{{ hostvars[item]['wireguard_ip'] }}"
        wireguard_mtu: "{{ hostvars[item]['wireguard_mtu'] }}"
      when: hostvars[item]['is_primary'] | bool
      with_items: "{{ groups['all'] }}"
      run_once: true

    - name: Ensure ping is installed
      apt:
        name:
          - iputils-ping
        state: present

    - name: disable ufw
      shell: ufw disable
      ignore_errors: yes

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Wireguard
      apt:
        name: wireguard
        state: present

    - name: Check if Wireguard private key exists
      stat:
        path: /etc/wireguard/private.key
      register: wg_private_exists

    - name: Generate Wireguard keys
      shell: |
        wg genkey > /etc/wireguard/private.key
        cat /etc/wireguard/private.key | wg pubkey > /etc/wireguard/public.key
        chmod 600 /etc/wireguard/private.key /etc/wireguard/public.key
      when: not wg_private_exists.stat.exists
      register: wg_key_created

    - name: Get public keys
      slurp:
        src: /etc/wireguard/public.key
      register: public_keys

    - name: Get private keys
      slurp:
        src: /etc/wireguard/private.key
      register: private_keys

    - name: Set facts for keys
      set_fact:
        wg_public_key: "{{ public_keys['content'] | b64decode | trim }}"
        wg_private_key: "{{ private_keys['content'] | b64decode | trim }}"

    - name: Debug hostvars for wg keys
      debug:
        msg: "Host {{ item }}: has wg_public_key = {{ hostvars[item]['wg_public_key'] is defined }}"
      loop: "{{ groups['all'] }}"
      when: is_primary | bool

    - name: Create Wireguard config for primary
      when: is_primary | bool
      template:
        src: wg0-primary.conf.j2
        dest: /etc/wireguard/wg0.conf
        mode: '0600'
      register: wireguard_primary

    - name: Create Wireguard config for worker
      when: not is_primary | bool
      template:
        src: wg0-worker.conf.j2
        dest: /etc/wireguard/wg0.conf
        mode: '0600'
      register: wireguard_worker

    - name: Enable and start Wireguard
      systemd:
        name: wg-quick@wg0
        enabled: yes
        state: started

    - name: Set MTU for Wireguard interface
      command: ip link set mtu {{ wireguard_mtu | default(1380) }} dev wg0
      become: true

    - name: Kick WG
      shell: wg-quick down wg0 && wg-quick up wg0

    - name: Ping primary node from non-primary nodes
      ansible.builtin.command: ping -c 1 {{ primary_wg_ip }}
      register: ping_result
      until: ping_result.rc == 0
      retries: 3
      delay: 5
      when: not (is_primary | bool)
      failed_when: ping_result.rc != 0

    - name: Fail if primary node is not pingable
      ansible.builtin.fail:
        msg: "Cannot ping primary node at {{ primary_wg_ip }} from {{ inventory_hostname }}"
      when:
        - not (is_primary | bool)
        - ping_result.failed
